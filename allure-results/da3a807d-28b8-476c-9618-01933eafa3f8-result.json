{"name": "test_google_auth", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_ui.TestAviasalesUI object at 0x000002B5B7891DC0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"104ce037369af30d4a689759ec272149\")>\n\n    @allure.story(\"Авторизация через Google\")\n    def test_google_auth(self, browser):\n        \"\"\"Проверка авторизации через Google.\"\"\"\n        with allure.step(\"1. Открыть главную страницу\"):\n            browser.get(BASE_URL)\n>           WebDriverWait(browser, 10).until(\n                EC.title_contains(\"Aviasales\"))\n\ntests\\test_ui.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"104ce037369af30d4a689759ec272149\")>\nmethod = <function title_contains.<locals>._predicate at 0x000002B5B72D36A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "Проверка авторизации через Google.", "steps": [{"name": "1. Открыть главную страницу", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\Юлия\\OneDrive\\Desktop\\jULL\\Skypro\\aviasales_autotests\\tests\\test_ui.py\", line 27, in test_google_auth\n    WebDriverWait(browser, 10).until(\n  File \"C:\\Users\\Юлия\\OneDrive\\Desktop\\jULL\\Skypro\\aviasales_autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1746793670406, "stop": 1746793688860}], "start": 1746793670405, "stop": 1746793688861, "uuid": "e23066f5-c4af-4821-8aa9-267c04a97cad", "historyId": "d9516bd4f0968d852c130ba141fe8af9", "testCaseId": "d9516bd4f0968d852c130ba141fe8af9", "fullName": "tests.test_ui.TestAviasalesUI#test_google_auth", "labels": [{"name": "feature", "value": "UI Тесты Aviasales"}, {"name": "story", "value": "Авторизация через Google"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestAviasalesUI"}, {"name": "host", "value": "DESKTOP-40TG5MB"}, {"name": "thread", "value": "15280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}]}